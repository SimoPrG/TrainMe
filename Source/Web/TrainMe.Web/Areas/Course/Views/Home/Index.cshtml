@using Course = TrainMe.Web.Areas.Course.Controllers
@model TrainMe.Web.Areas.Course.ViewModels.Course.IndexViewModel

@{
    ViewBag.Title = "Find A Course";
}

<h2>@ViewBag.Title</h2>

@(Html.Action<PartialViewsController>(c => c.RenderCreateLink(new { @class = "btn btn-lg btn-success"})))

<hr />

@using (Html.BeginForm<Course.HomeController>(c => c.Index(Model.Querry, Model.Category, Model.OrderBy, Model.Page), FormMethod.Get, htmlAttributes: new { @class = "form-inline" }))
{
    <div class="form-group">
        @Html.LabelFor(m => m.Querry, "Search by name or trainer: ")
        @Html.TextBoxFor(m => m.Querry, new { @class = "form-control" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Category, "Category: ")
        @Html.DropDownListFor(m => m.Category, Model.AllCategories, "--all categories--", new { @class = "form-control" })
    </div>

    <button type="submit" class="btn btn-default">Search</button>
}

<br />

<table class="table table-striped">
    <tr>
        <th>
            @(Html.ActionLink<Course.HomeController>("Name", c => c.Index(Model.Querry, Model.Category, Model.OrderByNameParam, Model.Page)))
        </th>
        <th>
            @(Html.ActionLink<Course.HomeController>("Trainer", c => c.Index(Model.Querry, Model.Category, Model.OrderByAuthorParam, Model.Page)))
        </th>
        <th>
            @(Html.ActionLink<Course.HomeController>("Category", c => c.Index(Model.Querry, Model.Category, Model.OrderByCategoryParam, Model.Page)))
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model.CourseViewModels)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AuthorUserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CategoryName)
            </td>
            <td>
                @(Html.ActionLink<CourseController>("Details", c => c.Details(item.Id), htmlAttributes: new { @class = "btn btn-info" }))
            </td>
        </tr>
    }

</table>

<nav>
    <ul class="pagination">
        @if (Model.Page > 1)
        {
            <li>
                <a href="@(Url.Action<Course.HomeController>(c => c.Index(Model.Querry, Model.Category, Model.OrderBy, Model.Page - 1)))" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>
        }

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li @(Model.Page == i ? "class=active" : string.Empty)>
                @(Html.ActionLink<Course.HomeController>(i.ToString(), c => c.Index(Model.Querry, Model.Category, Model.OrderBy, i)))
            </li>
        }

        @if (Model.Page < Model.TotalPages)
        {
            <li>
                <a href="@(Url.Action<Course.HomeController>(c => c.Index(Model.Querry, Model.Category, Model.OrderBy, Model.Page + 1)))" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        }
    </ul>
</nav>